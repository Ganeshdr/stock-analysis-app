{"version":3,"sources":["components/ReactExcelRenderer/ReactExcelRenderer.js","components/Loader/Loader.js","components/HistoricalData/HistoricalData.js","components/FundamentalDetails/FundamentalDetails.js","components/TechnicalIndicators/TechnicalIndicators.js","components/StockListItem/StockListItem.js","components/StockList/StockList.js","components/FilterStocks/FilterStocks.js","components/ImportFile/ImportFile.js","components/InputTag/InputTag.js","App.js","serviceWorker.js","index.js"],"names":["Component","ExcelRenderer","file","callback","Promise","resolve","reject","reader","FileReader","rABS","readAsBinaryString","onload","e","bstr","target","result","wb","XLSX","read","type","wsname","SheetNames","ws","Sheets","data","rows","utils","sheet_to_json","header","cols","refstr","o","C","decode_range","c","i","name","encode_col","key","make_cols","readAsArrayBuffer","Loader","props","className","style","sizeStyle","HistoricalData","state","rsiValuesForStock","intervalForRsi","macdValuesForStock","intervalForMacd","displayRetryOption","loadingStockDetails","this","fetchRSIForStock","stock","code","fetchMACDForStock","stockCode","interval","term","keys","Math","floor","random","length","url","setState","axios","get","then","res","rsiValues","Object","values","map","rsi","parseFloat","RSI","ctx","document","getElementById","getContext","Chart","labels","slice","reverse","datasets","label","borderColor","fill","options","responsive","maintainAspectRatio","catch","error","console","log","finally","macdObjectMap","macdValues","macd","MACD","macdSignalValues","MACD_Signal","event","value","id","onChange","changeInterval","bind","defaultValue","height","width","marginLeft","marginTop","color","onClick","refreshCharts","allStockData","require","React","memo","searchedStockDetails","filter","paddingBottom","index","prevProps","nextProps","bullish","bearishengulfingpattern","bullishengulfingpattern","doji","bullishharami","bearishharami","eveningstar","morningstar","threewhitesoldiers","threeblackcrows","shootingstar","TechnicalIndicators","technicalPatterns","fetchTradingDataForStock","startsWith","allValues","openValues","val","highValues","lowValues","closeValues","inputValues1","open","high","low","close","inputValuesWith3dayInput","Overall","StockListItem","stockDetails","openTab","fetchStockDetails","item","click","ev","dataType","tabcontent","tablinks","getElementsByClassName","display","replace","currentTarget","Number","StockList","stockItems","FilterStocks","paddingLeft","filterParams","filterValues","ImportFile","totalEntriesInfile","InputTag","removeTag","tag","newTags","tags","splice","onRemove","inputKeyDown","split","toString","onSelect","find","toLowerCase","tagInput","entries","prevState","snapshot","Set","predictions","placeholder","ref","isDataFetched","filters","App","stocks","dataFetched","selectedStocks","handleChange","onSelectStock","clearTimeout","timeout","setTimeout","fetchAllPredictions","text","_","flattenDeep","Array","from","some","preventDefault","updatedSelectedStocks","param","min","max","columns","codeIndex","indexOf","nameIndex","newfilteredStocks","every","filteredStockNames","stockData","files","fileObj","fileName","lastIndexOf","renderFile","err","resp","handleClick","onRemoveStock","fileHandler","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.691572c9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport XLSX from 'xlsx';\n\nexport class OutTable extends Component {\n\n\tconstructor(props) { \n        super(props);\n        this.state = {\n            \n        }\n    }\n\n\trender() { \n        return (\n            <div>\n                <table className={this.props.tableClassName}  >                                       \n                    <tbody>\n                        <tr>\n                            {\n                                this.props.columns.map((c) => \n                                    <th key={c.key} className={c.key === -1 ? this.props.tableHeaderRowClass : \"\"}>{c.key === -1 ? \"\" : c.name}</th>\n                                )\n                            \n                            }\n                        </tr>\n                        {this.props.data.map((r,i) => <tr key={i}><td key={i} className={this.props.tableHeaderRowClass}>{i}</td>\n                            {this.props.columns.map(c => <td key={c.key}>{ r[c.key] }</td>)}\n                        </tr>)}\n                    </tbody>\n                </table>\n            </div>\n        ); \n    }\n}\n\nexport function ExcelRenderer(file, callback) {\n    return new Promise(function(resolve, reject) {\n      var reader = new FileReader();\n      var rABS = !!reader.readAsBinaryString;\n      reader.onload = function(e) {\n        /* Parse data */\n        var bstr = e.target.result;\n        var wb = XLSX.read(bstr, { type: rABS ? \"binary\" : \"array\" });\n  \n        /* Get first worksheet */\n        var wsname = wb.SheetNames[0];\n        var ws = wb.Sheets[wsname];\n  \n        /* Convert array of arrays */\n        var json = XLSX.utils.sheet_to_json(ws, { header: 1 });\n        var cols = make_cols(ws[\"!ref\"]);\n  \n        var data = { rows: json, cols: cols };\n  \n        resolve(data);\n        return callback(null, data);\n      };\n      if (file && rABS) reader.readAsBinaryString(file);\n      else reader.readAsArrayBuffer(file);\n    });\n  }\n  \n  function make_cols(refstr) {\n    var o = [],\n      C = XLSX.utils.decode_range(refstr).e.c + 1;\n    for (var i = 0; i < C; ++i) {\n      o[i] = { name: XLSX.utils.encode_col(i), key: i };\n    }  \n    return o;\n  }","import React from 'react';\nimport './Loader.css';\n\nfunction Loader(props) {\n  return (\n    <div className=\"loader\" style={props.sizeStyle}></div>\n  );\n}\n\nexport default Loader;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Chart from 'chart.js';\n\nimport './HistoricalData.css';\nimport Loader from '../Loader/Loader';\n\nclass HistoricalData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rsiValuesForStock: [],\n      intervalForRsi: '',\n      macdValuesForStock: [],\n      intervalForMacd: '',\n      displayRetryOption: false,\n      loadingStockDetails: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchRSIForStock(this.props.stock.code, 'daily');\n    this.fetchMACDForStock(this.props.stock.code, 'daily');\n  }\n\n  refreshCharts() {\n    this.fetchRSIForStock(this.props.stock.code, 'daily');\n    this.fetchMACDForStock(this.props.stock.code, 'daily');\n  }\n\n  fetchRSIForStock(stockCode, interval) {\n    let term = `${stockCode}.NSE`;\n    const keys = ['F3YMXXSSB1DWAEWU', 'DDLGBF7C6UW50LSR', 'WXFOM7UBEMRGNOD5', 'PSIUYE1BYNK35V7D', 'Q2QD7JRMPER3VOYO'];\n    const key = keys[Math.floor(Math.random() * keys.length)];\n    const url = `https://www.alphavantage.co/query?function=RSI&symbol=${term}&interval=${interval}&time_period=10&series_type=open&apikey=${key}`;\n\n    this.setState({\n      loadingStockDetails: true\n    });\n    axios.get(url)\n    .then(res => {\n      if (res.data['Technical Analysis: RSI']) {\n        const rsiObjectMap = Object.values(res.data['Technical Analysis: RSI']),\n          rsiValues = rsiObjectMap.map(rsi => parseFloat(rsi.RSI)),\n          ctx = document.getElementById(`rsiChart-${this.props.stock.code}`).getContext('2d');\n        new Chart(ctx, {\n          type: 'line',\n          data: {\n            labels: Object.keys(res.data['Technical Analysis: RSI']).slice(0, 10).reverse(),\n            datasets: [\n              {\n                label: 'RSI',\n                data: rsiValues.slice(0, 10).reverse(),\n                borderColor: \"#3e95cd\",\n                fill: false\n              }\n            ]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false\n          }\n        });\n        this.setState({\n          rsiValuesForStock: rsiValues,\n          displayRetryOption: false\n        });\n      } else {\n        this.setState({\n          displayRetryOption: true\n        });\n      }\n    })\n    .catch(error => {\n      this.setState({\n        displayRetryOption: true\n      });\n      console.log(error)\n    })\n    .finally(() => {\n      this.setState({\n        loadingStockDetails: false\n      })\n    })\n  }\n\n  fetchMACDForStock(stockCode, interval) {\n    let term = `${stockCode}.NSE`;\n    const keys = ['F3YMXXSSB1DWAEWU', 'DDLGBF7C6UW50LSR', 'WXFOM7UBEMRGNOD5', 'PSIUYE1BYNK35V7D', 'Q2QD7JRMPER3VOYO'];\n    const key = keys[Math.floor(Math.random() * keys.length)];\n    const url = `https://www.alphavantage.co/query?function=MACD&symbol=${term}&interval=${interval}&series_type=open&apikey=${key}`;\n\n    this.setState({\n      loadingStockDetails: true\n    });\n    axios.get(url)\n    .then(res => {\n      if (res.data['Technical Analysis: MACD']) {\n        const macdObjectMap = Object.values(res.data['Technical Analysis: MACD']),\n          macdValues = macdObjectMap.map(macd => parseFloat(macd.MACD)),\n          macdSignalValues = macdObjectMap.map(macd => parseFloat(macd.MACD_Signal)),\n          ctx = document.getElementById(`macdChart-${this.props.stock.code}`).getContext('2d');\n        new Chart(ctx, {\n          type: 'line',\n          data: {\n            labels: Object.keys(res.data['Technical Analysis: MACD']).slice(0, 10).reverse(),\n            datasets: [\n              {\n                label: 'MACD',\n                data: macdValues.slice(0, 10).reverse(),\n                borderColor: \"#3e95cd\",\n                fill: false\n              },\n              {\n                label: 'MACD Signal',\n                data: macdSignalValues.slice(0, 10).reverse(),\n                borderColor: \"#8e5ea2\",\n                fill: false\n              }\n            ]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false\n          }\n        });\n        this.setState({\n          macdValuesForStock: macdValues,\n          displayRetryOption: false\n        });\n      } else {\n        this.setState({\n          displayRetryOption: true\n        })\n      }\n    })\n    .catch(error => {\n      this.setState({\n        displayRetryOption: true\n      });\n      console.log(error);\n    })\n    .finally(() => {\n      this.setState({\n        loadingStockDetails: false\n      })\n    })\n  }\n\n  changeInterval(event) {\n    let interval = '';\n    switch (event.target.value) {\n      case 'daily':\n        interval = 'daily';\n        break;\n      case 'intraday_5':\n        interval = '5min';\n        break;\n      case 'intraday_15':\n      interval = '15min';\n        break;\n      default:\n        break;\n    }\n    this.fetchRSIForStock(this.props.stock.code, interval);\n    this.fetchMACDForStock(this.props.stock.code, interval);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"select-dropdown\">\n          <select id=\"interval\" onChange={this.changeInterval.bind(this)} defaultValue=\"daily\">\n            <option value=\"daily\">Daily</option>\n            <option value=\"intraday_5\">Intraday(5 min)</option>\n            <option value=\"intraday_15\">Intraday(15 min)</option>\n          </select>\n        </div>\n        { \n          this.state.loadingStockDetails ? <Loader sizeStyle={{height: '30px', width: '30px', marginLeft: '40%', marginTop: '20px'}}/> : null\n        }\n        {\n          this.state.displayRetryOption && !this.state.loadingStockDetails ? <div><div style={{color: 'red'}}>Couldn't retrieve latest data. Refresh the page again after 1 minute</div><div><button className=\"button\" onClick={this.refreshCharts.bind(this)}>Refresh</button></div></div> : null\n        }\n        <div className=\"charts\">\n          <div className={`rsi-chart-${this.props.stock.code}`} style={{height: '300px', width: '300px'}}>\n            <canvas id={`rsiChart-${this.props.stock.code}`}></canvas>\n          </div>\n          <div className={`macd-chart-${this.props.stock.code}`} style={{height: '300px', width: '300px'}}>\n            <canvas id={`macdChart-${this.props.stock.code}`}></canvas>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HistoricalData;","import React from 'react';\n// import StockFundamentalData from '../../db/stock_details.json';\n\nconst fileData = require('../../db/stock_details.json');\nconst allStockData = fileData[\"3573 Stocks Detail\"];\n// var fs = require('fs');\n// fs.readFile('../../db/stock_details.json', (err, data) => {\n//   if (err)\n//     console.log(err);\n//   else {\n//     const allStockData = JSON.parse(data[\"3573 Stocks Detail\"]);\n//   }\n// })\n\nfunction areEqual(prevProps, nextProps) {\n  /*\n  return true if passing nextProps to render would return\n  the same result as passing prevProps to render,\n  otherwise return false\n  */\n return prevProps.stock.code === nextProps.stock.code\n}\n\nconst FundamentalDetails = (props) => {\n  // console.log('json data', StockFundamentalData[\"3573 Stocks Detail\"][0].Name, props);\n  const searchedStockDetails = allStockData && allStockData.filter(stock => stock[\"NSE Code\"] === props.stock.code)[0],\n    keys = ['Price to Earning', 'Debt to equity', 'Return on capital employed', 'Return on equity', \n    'Price to book value', 'Promoter holding', 'Pledged percentage', 'PEG Ratio', 'Average return on equity 3Years', 'Dividend yield', \n    'Industry PE', 'Profit growth 5Years'];\n  return (\n    searchedStockDetails ?\n      <div>\n        <div style={{paddingBottom: '10px'}}>Industry: { searchedStockDetails['Industry']} </div>\n        <div>Market Capitalization(in crores): { searchedStockDetails['Market Capitalization']} </div>\n        {\n          keys.map((key, index) => <div key={index}>{key} : {searchedStockDetails[key]}</div>)\n        }\n      </div>\n    : null\n  );\n};\n\nexport default React.memo(FundamentalDetails, areEqual);","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport './TechnicalIndicators.css';\nimport Loader from '../Loader/Loader';\nconst bullish = require('technicalindicators').bullish;\nconst bearishengulfingpattern = require('technicalindicators').bearishengulfingpattern;\nconst bullishengulfingpattern = require('technicalindicators').bullishengulfingpattern;\nconst doji =require('technicalindicators').doji;\nconst bullishharami =require('technicalindicators').bullishharami;\nconst bearishharami =require('technicalindicators').bearishharami;\nconst eveningstar =require('technicalindicators').eveningstar;\nconst morningstar =require('technicalindicators').morningstar;\nconst threewhitesoldiers =require('technicalindicators').threewhitesoldiers;\nconst threeblackcrows =require('technicalindicators').threeblackcrows;\nconst shootingstar = require('technicalindicators').shootingstar;\n\nclass TechnicalIndicators extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      technicalPatterns: {},\n      displayRetryOption: false,\n      loadingStockDetails: false\n    };\n    this.fetchTradingDataForStock = this.fetchTradingDataForStock.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchTradingDataForStock(this.props.stock.code, 'daily');\n  }\n\n  fetchTradingDataForStock(stockCode, interval) {\n    let term = `${stockCode}.NSE`;\n    const keys = ['F41ON15LGCFM4PR7', 'SYTCQBUIU44BX2G4', '50M3AP1K3Y', 'RNZPXZ6Q9FEFMEHM', 'VZLZ58FTEXZW7QZ6'];\n    const key = keys[Math.floor(Math.random() * keys.length)];\n    let url;\n    switch (interval) {\n      case 'daily':\n        url = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&&symbol=${term}&outputsize=compact&apikey=${key}`;\n        break;\n      case 'intraday_5':\n        url = `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&&symbol=${term}&interval=5min&outputsize=compact&apikey=${key}`;\n        break;\n      case 'intraday_15':\n        url = `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&&symbol=${term}&interval=15min&outputsize=compact&apikey=${key}`;\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      loadingStockDetails: true\n    });\n    axios.get(url)\n    .then(res => {\n      const key = res.data['Meta Data'] ? Object.keys(res.data)[1].startsWith('Time Series') ? Object.keys(res.data)[1] : null : null;\n      if (key) {\n        const allValues = [...Object.values(res.data[key])],\n          openValues = allValues.map(val => parseFloat(val['1. open'])).slice(0, 2).reverse(),\n          highValues = allValues.map(val => parseFloat(val['2. high'])).slice(0, 2).reverse(),\n          lowValues = allValues.map(val => parseFloat(val['3. low'])).slice(0, 2).reverse(),\n          closeValues = allValues.map(val => parseFloat(val['4. close'])).slice(0, 2).reverse();\n          // volumes = allValues.map(val => parseFloat(val['5. volume'])).slice(0, 2).reverse();\n        const inputValues1 = {\n          open: openValues,\n          high: highValues,\n          low: lowValues,\n          close: closeValues\n        },\n          inputValuesWith3dayInput = {\n            open: allValues.map(val => parseFloat(val['1. open'])).slice(0, 3).reverse(),\n            high: allValues.map(val => parseFloat(val['2. high'])).slice(0, 3).reverse(),\n            low: allValues.map(val => parseFloat(val['3. low'])).slice(0, 3).reverse(),\n            close: allValues.map(val => parseFloat(val['4. close'])).slice(0, 3).reverse()\n          };\n\n        this.setState({\n          technicalPatterns: {\n            \"Is Bearish engulfing pattern formed\": bearishengulfingpattern(inputValues1),\n            \"Is Bullish engulfing pattern formed\": bullishengulfingpattern(inputValues1),\n            \"Is Doji formed\": doji({\n              open: openValues[openValues.length - 1],\n              high: highValues[highValues.length - 1],\n              low: lowValues[lowValues.length - 1],\n              close: closeValues[closeValues.length - 1]\n            }),\n            \"Is Bearish harami pattern formed\": bearishharami(inputValues1),\n            \"Is Bullish harami pattern formed\": bullishharami(inputValues1),\n            \"Is Evening Star formed\": eveningstar(inputValuesWith3dayInput),\n            \"Is Morning Star formed\": morningstar(inputValuesWith3dayInput),\n            \"Is Three Black Crows pattern formed\": threeblackcrows(inputValuesWith3dayInput),\n            \"Is Three White Soldiers pattern formed\": threewhitesoldiers(inputValuesWith3dayInput),\n            \"Is Shooting Star pattern formed\": shootingstar(inputValuesWith3dayInput),\n            Overall: bullish(inputValues1)\n          },\n          displayRetryOption: false\n        });\n      } else {\n        this.setState({\n          displayRetryOption: true\n        });\n      }\n    })\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        displayRetryOption: true\n      })\n    })\n    .finally(() => {\n      this.setState({\n        loadingStockDetails: false\n      })\n    })\n  }\n\n  changeInterval(event) {\n    this.fetchTradingDataForStock(this.props.stock.code, event.target.value);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"select-dropdown\">\n          <select id=\"interval\" onChange={this.changeInterval.bind(this)} defaultValue=\"daily\">\n            <option value=\"daily\">Daily</option>\n            <option value=\"intraday_5\">Intraday(5 min)</option>\n            <option value=\"intraday_15\">Intraday(15 min)</option>\n          </select>\n          <p></p>\n          <p>{this.state.value}</p>\n        </div>\n        {\n          this.state.displayRetryOption && !this.state.loadingStockDetails ? <div><div style={{color: 'red'}}>Couldn't retrieve latest data. Refresh the page again after 1 minute</div><div><button className=\"button\" onClick={() => this.fetchTradingDataForStock(this.props.stock.code, 'daily')}>Refresh</button></div></div> : null\n        }\n        { \n          this.state.loadingStockDetails ? <Loader sizeStyle={{height: '30px', width: '30px', marginLeft: '40%', marginTop: '20px'}}/> :\n          <div className=\"technical-entries\">\n            {\n              this.state.technicalPatterns && Object.keys(this.state.technicalPatterns).length ? Object.keys(this.state.technicalPatterns).map((key, index) => {\n                return (\n                  <div key={index}>{key} : {this.state.technicalPatterns[key] ? <span style={{color: 'darkgreen'}}>'Yes'</span>: <span style={{color: 'red'}}>'No'</span>}</div>\n                );\n              }) : null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default TechnicalIndicators;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './StockListItem.css';\nimport Loader from '../Loader/Loader';\nimport HistoricalData from '../HistoricalData/HistoricalData';\nimport FundamentalDetails from '../FundamentalDetails/FundamentalDetails';\nimport TechnicalIndicators from '../TechnicalIndicators/TechnicalIndicators';\n\nclass StockListItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stockDetails: {},\n      displayRetryOption: false,\n      loadingStockDetails: false\n    };\n    this.openTab = this.openTab.bind(this);\n    this.fetchStockDetails = this.fetchStockDetails.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchStockDetails(this.props.item.code);\n    document.getElementById(`defaultOpen-${this.props.item.code}`).click();\n  }\n\n  openTab(ev, dataType) {\n    var i, tabcontent, tablinks;\n    tabcontent = document.getElementsByClassName(`tabcontent-${this.props.item.code}`);\n    for (i = 0; i < tabcontent.length; i++) {\n      tabcontent[i].style.display = \"none\";\n    }\n    tablinks = document.getElementsByClassName(`tablinks-${this.props.item.code}`);\n    for (i = 0; i < tablinks.length; i++) {\n      tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n    }\n    document.getElementById(dataType).style.display = \"block\";\n    ev.currentTarget.className += \" active\";\n  }\n\n  fetchStockDetails(stockCode) {\n    let term = `${stockCode}.NSE`;\n    const keys = ['E3JQ79Z8TOZDXQ9O', '1MZEAXT6B2B52KXY', 'M8MTQHK38J65US1E', 'CDYFPHQYOGVYKYFL', 'TM6O1OH9WQIT6LIV'];\n    const key = keys[Math.floor(Math.random() * keys.length)];\n    const url = `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${term}&apikey=${key}`;\n\n    this.setState({\n      loadingStockDetails: true\n    });\n    axios.get(url)\n    .then(res => {\n      if (res.data['Global Quote']) {\n        this.setState({\n          stockDetails: res.data['Global Quote'],\n          displayRetryOption: false\n        });\n      } else {\n        this.setState({\n          displayRetryOption: true\n        });\n      }\n    })\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        displayRetryOption: true\n      });\n    })\n    .finally(() => {\n      this.setState({\n        loadingStockDetails: false\n      })\n    })\n  }\n\n  render() {\n    const stockDetails = this.state.stockDetails;\n    return (\n      <div className=\"stock-details\">\n        <div>\n          <div className=\"title\">{ this.props.item.name }</div>\n          <div className=\"tab\">\n            <button className={`tablinks-${this.props.item.code}`} onClick={ (ev) => this.openTab( ev, `latest-${this.props.item.code}`) } id={`defaultOpen-${this.props.item.code}`}>Latest Data</button>\n            <button className={`tablinks-${this.props.item.code}`} onClick={ (ev) => this.openTab( ev, `fundamental-${this.props.item.code}`) }>Fundamental Details</button>\n            <button className={`tablinks-${this.props.item.code}`} onClick={ (ev) => this.openTab(ev, `historical-${this.props.item.code}`) }>Historical</button>\n            <button className={`tablinks-${this.props.item.code}`} onClick={ (ev) => this.openTab(ev, `technical-${this.props.item.code}`) }>Technical Indicators</button>\n          </div>\n          {\n            this.state.displayRetryOption && !this.state.loadingStockDetails ? <div><div style={{color: 'red'}}>Couldn't retrieve latest data. Refresh the page again after 1 minute</div><div><button className=\"button\" onClick={() => this.fetchStockDetails(this.props.item.code)}>Refresh</button></div></div> : null\n          }\n          { \n            this.state.loadingStockDetails ? <Loader sizeStyle={{height: '30px', width: '30px', marginLeft: '40%'}}/> :\n            <div id={`latest-${this.props.item.code}`} className={`tabcontent-${this.props.item.code} details`}>\n              <div>{ stockDetails && Object.keys(stockDetails).length ? Object.keys(stockDetails).map((key, index) => {\n                return (\n                <div key={index}>{ key === '05. price' ? <div>{key} : { Number(stockDetails['09. change']) > 0 ? <span style={{color: 'darkgreen'}}>{stockDetails[key]}</span> : <span style={{color: 'red'}}>{stockDetails[key]}</span>}</div>: <div>{key} : {stockDetails[key]}</div> }</div>\n                );\n              }) : null\n              }</div>\n            </div> \n          }\n          <div id={`fundamental-${this.props.item.code}`} className={`tabcontent-${this.props.item.code} details`}>\n            <FundamentalDetails stock={this.props.item}/>\n          </div>\n          <div id={`historical-${this.props.item.code}`} className={`tabcontent-${this.props.item.code} details`}>\n            <HistoricalData stock={this.props.item}/>\n          </div>\n          <div id={`technical-${this.props.item.code}`} className={`tabcontent-${this.props.item.code} details`}>\n            <TechnicalIndicators stock={this.props.item}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StockListItem;","import React from 'react';\nimport StockListItem from '../StockListItem/StockListItem';\nimport './StockList.css';\n\n\nconst StockList = (props) => {\n\n  const stockItems = props.stockItems.map((stock, index) => {\n    return (\n      <StockListItem key={ index } item={stock}/>\n    );\n  });\n\n  return (\n    <div className=\"StockList\">\n      { stockItems }\n    </div>\n  )\n}\n\nexport default StockList;\n","import React from 'react';\n\nimport './FilterStocks.css';\n\nfunction FilterStocks(props) {\n\n  return  (\n    <div className=\"filter_stocks\">\n      <div className=\"label\" style={{paddingLeft:\"10px\"}}>Filter the stocks based on these parameters: </div>\n      <div className=\"filters\">\n        { props.filterParams.map((item, index) => {\n          return (\n          <div className=\"FilterParams\" key={index}>{item}: <input type=\"number\" onChange={(ev) => props.filterValues(ev.target.value, 'min', item)}/> - <input type=\"number\" onChange={(ev) => props.filterValues(ev.target.value, 'max', item)}/></div>\n        )})}\n      </div>\n    </div>\n  );\n}\n\nexport default FilterStocks;\n","import React from 'react';\nimport FilterStocks from '../FilterStocks/FilterStocks';\nimport './ImportFile.css';\n\nfunction ImportFile(props) {\n  const filterParams = ['Market Capitalization', 'Return on equity', 'Price to Earning', 'Pledged percentage', 'PEG Ratio', \n  'Price to book value', 'Debt to equity'];\n    return  (\n      <div className=\"ImportFile\">\n        <div className=\"header optional\">OR</div>\n        <div className=\"header\">You could even import .xlsx file to add the stocks in the search bar!(up to 5 stocks can be filtered at a time)</div>\n        <input type=\"file\" onChange={props.onChange} onClick={props.onClick} style={{\"padding\":\"10px\"}} />\n        { props.totalEntriesInfile.length ? <div className=\"total_entries\">{props.totalEntriesInfile.length - 1} entries found in the file</div> : '' }\n        {props.totalEntriesInfile.length ?<FilterStocks filterParams={filterParams} filterValues={props.filterValues}/> : ''}\n      </div>\n    );\n}\n\nexport default ImportFile;\n","import React, { Component } from 'react';\nimport './InputTag.css';\nimport Loader from '../Loader/Loader';\n\nclass InputTag extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      tags: []\n    };\n  }\n  \n  componentDidMount() {\n    this.setState({\n      tags: this.props.entries\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.entries.length !== this.props.entries.length ) {\n      this.setState({\n        tags: [...new Set([...this.state.tags, ...this.props.entries])]\n      })\n    }\n  }\n\n  removeTag = (tag, i) => {\n    const newTags = [ ...this.state.tags ];\n    newTags.splice(i, 1);\n    this.setState({ tags: newTags });\n    this.props.onRemove(tag);\n  }\n\n  inputKeyDown = (item, e) => { \n    item.code = item.code.split('.')[0].toString();\n    this.props.onSelect(item, e);\n    if (this.state.tags.find(tag => tag.code.toLowerCase() === item.code.toLowerCase())) {\n      return;\n    }\n    this.setState({ tags: [...this.state.tags, item]});\n    this.tagInput.value = null;\n  }\n\n  render() {\n    const { tags } = this.state;\n\n    const predictions = this.props.predictions;\n    return (\n      <div>\n        <div className=\"input-tag\">\n          <ul className=\"input-tag__tags\">\n            { tags.map((tag, i) => (\n              <li key={i}>\n                {tag.code}\n                <button type=\"button\" onClick={() => { this.removeTag(tag, i); }}>+</button>\n              </li>\n            ))}\n            <li className=\"input-tag__tags__input\">\n              <input type=\"text\"\n                onChange={ this.props.onChange }\n                placeholder=\"Enter proper NSE code for your stock\"\n                ref={c => { this.tagInput = c; }} />\n            </li>\n          </ul>\n        </div>\n        <div className=\"SearchBar__Predictions\"> \n          <div>{ this.props.value.length > 1 && predictions && predictions.length ? predictions.map((item, index) => (\n            <div key={index} className=\"prediction\" onClick={ (e) => this.inputKeyDown(item, e) }>{item.code} : { item.name}</div>\n          )) : <div>{ this.props.value.length > 1 && !this.props.isDataFetched && predictions && !predictions.length ? <div className=\"prediction\"><Loader sizeStyle={{height: '12px', width: '12px', marginLeft: '40%'}}/></div>:null}</div>}</div>\n          <div className=\"error\">{ this.props.value.length > 1 && this.props.isDataFetched && predictions && !predictions.length ? 'No stock found with such keywords' : null }</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InputTag;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport {ExcelRenderer} from './components/ReactExcelRenderer/ReactExcelRenderer';\nimport StockList from './components/StockList/StockList';\nimport ImportFile from './components/ImportFile/ImportFile';\nimport InputTag from './components/InputTag/InputTag';\nimport './App.css';\n\nconst INPUT_TIMEOUT = 600;\nconst filters = {};\nlet stocks = []; \n// const SMA = require('technicalindicators').SMA;\n// console.log(SMA.calculate({period : 5, values : [1,2,3,4,5,6,7,8,9]}));\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      predictions: [],\n      stocks: [],\n      value: '',\n      dataFetched: false,\n      totalEntriesInfile: [],\n      filters:{},\n      selectedStocks: []\n    };\n\n    // this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.onSelectStock = this.onSelectStock.bind(this);\n  }\n\n  handleChange(e) {\n    // clear timeout when input changes value\n    clearTimeout(this.timeout);\n    const value = e.target.value;\n    this.setState({\n      value\n    });\n\n    if (value.length > 1) {\n      // make delayed api call\n      this.timeout = setTimeout(() => {\n        this.fetchAllPredictions(value);\n      }, INPUT_TIMEOUT);\n    } else {\n      this.setState({\n        predictions: []\n      });\n    }\n  }\n\n  fetchAllPredictions(text) {\n    let term = `${text}.NSE`;\n    const keys = ['5VDBWLCQX19QLOHA', 'BYCL2VV943GO0OYJ', '2H21XW7C06ZD97VM', 'U9QP95JKNBLAGPS1', 'ULJDF26QPKN97Z44'];\n    const key = keys[Math.floor(Math.random() * keys.length)];\n    const url = `https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${term}&apikey=${key}`;\n\n    this.setState({\n      dataFetched: false\n    })\n    axios.get(url)\n    .then(res => {\n      let stocks = _.flattenDeep( Array.from(res.data['bestMatches']).map((stock) => [{code: stock['1. symbol'], name: stock['2. name']}]) );\n      this.setState({\n        predictions: stocks\n      });\n    })\n    .catch(error => console.log(error))\n    .finally(() => this.setState({\n      dataFetched: true\n    }))\n  }\n\n  onSelectStock(item, ev) {\n    item.code = item.code.split('.')[0].toString();\n    if (!this.state.selectedStocks.some(stock => stock.code === item.code)) {\n      this.setState({\n        value: '',\n        predictions: [],\n        selectedStocks: [ ...this.state.selectedStocks, item ]\n      });\n    }\n    ev.preventDefault();\n  }\n\n  onRemoveStock(item, ev) {\n    const stockCode = item.code.split('.')[0].toString(),\n      updatedSelectedStocks = this.state.selectedStocks.filter(stock => stock.code !== stockCode);\n    this.setState({\n      selectedStocks: updatedSelectedStocks\n    });\n  }\n\n  filterValues(value, type, param) {\n    if (!filters[param]) {\n      filters[param] = {};\n      filters[param][type] = value;\n    } else {\n      filters[param][type] = value;\n    }\n    if (!filters[param].min && !filters[param].max) {\n      delete filters[param];\n    }\n\n    const columns = this.state.totalEntriesInfile[0],\n      codeIndex = columns.indexOf('NSE Code'),\n      nameIndex = columns.indexOf('Name');\n    stocks = [...this.state.totalEntriesInfile.slice(0, this.state.totalEntriesInfile.length)];\n    let newfilteredStocks = stocks.filter(item => Object.keys(filters).every(param => \n      filters[param].min && filters[param].max && (item[columns.indexOf(param)] >= Number(filters[param].min) && item[columns.indexOf(param)] <= Number(filters[param].max))\n    ));\n    newfilteredStocks = newfilteredStocks.slice(0, 5);\n    const filteredStockNames = [ ...newfilteredStocks.map(stockData =>\n      ({\n        code: stockData[codeIndex],\n        name: stockData[nameIndex]\n      }))];\n    this.setState({\n      selectedStocks: filteredStockNames\n    })\n  }\n\n  fileHandler(event) {    \n    if(event.target.files.length){\n      let fileObj = event.target.files[0];\n      let fileName = fileObj.name;\n\n      \n      //check for file extension and pass only if it is .xlsx and display error message otherwise\n      if(fileName.slice(fileName.lastIndexOf('.')+1) === \"xlsx\"){\n        // this.setState({\n        //   uploadedFileName: fileName,\n        //   isFormInvalid: false\n        // });\n        this.renderFile(fileObj)\n      }    \n      else{\n        // this.setState({\n        //   isFormInvalid: true,\n        //   uploadedFileName: \"\"\n        // })\n      }\n    }               \n  }\n\n  renderFile(fileObj) {\n    //just pass the fileObj as parameter\n    ExcelRenderer(fileObj, (err, resp) => {\n      if(err){\n        console.log(err);            \n      }\n      else {\n        this.setState({\n          totalEntriesInfile: resp.rows\n        });\n      }\n    }); \n}\n\n  render () {\n    // let stocks = this.state.stocks;\n    const value = this.state.value;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__Title\">Stock Search</h1>\n        <InputTag entries={this.state.selectedStocks}\n          value={ value }\n          onChange={ this.handleChange }\n          onClick={ this.handleClick }\n          isDataFetched={this.state.dataFetched}\n          predictions={ this.state.predictions }\n          onSelect={ this.onSelectStock }\n          onRemove={ this.onRemoveStock.bind(this) }/>\n        <ImportFile onChange={this.fileHandler.bind(this)} onClick={(event)=> { event.target.value = null }}\n          totalEntriesInfile={this.state.totalEntriesInfile} filterValues={this.filterValues.bind(this)}/> \n        <StockList stockItems={ this.state.selectedStocks }/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}