{"version":3,"sources":["components/ReactExcelRenderer/ReactExcelRenderer.js","components/Loader/Loader.js","components/HistoricalData/HistoricalData.js","components/TechnicalIndicators/TechnicalIndicators.js","components/StockListItem/StockListItem.js","components/StockList/StockList.js","components/FilterStocks/FilterStocks.js","components/ImportFile/ImportFile.js","components/InputTag/InputTag.js","App.js","serviceWorker.js","index.js"],"names":["Component","ExcelRenderer","file","callback","Promise","resolve","reject","reader","FileReader","rABS","readAsBinaryString","onload","e","bstr","target","result","wb","XLSX","read","type","wsname","SheetNames","ws","Sheets","data","rows","utils","sheet_to_json","header","cols","refstr","o","C","decode_range","c","i","name","encode_col","key","make_cols","readAsArrayBuffer","Loader","props","className","style","sizeStyle","HistoricalData","state","rsiValuesForStock","intervalForRsi","macdValuesForStock","intervalForMacd","displayRetryOption","loadingStockDetails","this","fetchRSIForStock","stock","code","fetchMACDForStock","stockCode","interval","term","keys","Math","floor","random","length","url","setState","axios","get","then","res","rsiValues","Object","values","map","rsi","parseFloat","RSI","ctx","document","getElementById","getContext","Chart","labels","slice","reverse","datasets","label","borderColor","fill","options","responsive","maintainAspectRatio","catch","error","console","log","finally","macdObjectMap","macdValues","macd","MACD","macdSignalValues","MACD_Signal","event","value","id","onChange","changeInterval","bind","defaultValue","height","width","marginLeft","marginTop","color","onClick","refreshCharts","bullish","require","bearishengulfingpattern","bullishengulfingpattern","doji","bullishharami","bearishharami","eveningstar","morningstar","threewhitesoldiers","threeblackcrows","shootingstar","TechnicalIndicators","technicalPatterns","fetchTradingDataForStock","startsWith","allValues","openValues","val","highValues","lowValues","closeValues","inputValues1","open","high","low","close","inputValuesWith3dayInput","Overall","index","StockListItem","stockDetails","openTab","fetchStockDetails","item","click","ev","dataType","tabcontent","tablinks","getElementsByClassName","display","replace","currentTarget","StockList","stockItems","FilterStocks","paddingLeft","filterParams","filterValues","ImportFile","totalEntriesInfile","InputTag","removeTag","tag","newTags","tags","splice","onRemove","inputKeyDown","split","toString","onSelect","find","toLowerCase","tagInput","entries","prevProps","prevState","snapshot","Set","predictions","placeholder","ref","isDataFetched","filters","App","stocks","dataFetched","selectedStocks","handleChange","onSelectStock","clearTimeout","timeout","setTimeout","fetchAllPredictions","text","_","flattenDeep","Array","from","preventDefault","updatedSelectedStocks","filter","param","min","max","columns","codeIndex","indexOf","nameIndex","newfilteredStocks","every","Number","filteredStockNames","stockData","files","fileObj","fileName","lastIndexOf","renderFile","err","resp","handleClick","onRemoveStock","fileHandler","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a991bbed.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport XLSX from 'xlsx';\n\nexport class OutTable extends Component {\n\n\tconstructor(props) { \n        super(props);\n        this.state = {\n            \n        }\n    }\n\n\trender() { \n        return (\n            <div>\n                <table className={this.props.tableClassName}  >                                       \n                    <tbody>\n                        <tr>\n                            {\n                                this.props.columns.map((c) => \n                                    <th key={c.key} className={c.key === -1 ? this.props.tableHeaderRowClass : \"\"}>{c.key === -1 ? \"\" : c.name}</th>\n                                )\n                            \n                            }\n                        </tr>\n                        {this.props.data.map((r,i) => <tr key={i}><td key={i} className={this.props.tableHeaderRowClass}>{i}</td>\n                            {this.props.columns.map(c => <td key={c.key}>{ r[c.key] }</td>)}\n                        </tr>)}\n                    </tbody>\n                </table>\n            </div>\n        ); \n    }\n}\n\nexport function ExcelRenderer(file, callback) {\n    return new Promise(function(resolve, reject) {\n      var reader = new FileReader();\n      var rABS = !!reader.readAsBinaryString;\n      reader.onload = function(e) {\n        /* Parse data */\n        var bstr = e.target.result;\n        var wb = XLSX.read(bstr, { type: rABS ? \"binary\" : \"array\" });\n  \n        /* Get first worksheet */\n        var wsname = wb.SheetNames[0];\n        var ws = wb.Sheets[wsname];\n  \n        /* Convert array of arrays */\n        var json = XLSX.utils.sheet_to_json(ws, { header: 1 });\n        var cols = make_cols(ws[\"!ref\"]);\n  \n        var data = { rows: json, cols: cols };\n  \n        resolve(data);\n        return callback(null, data);\n      };\n      if (file && rABS) reader.readAsBinaryString(file);\n      else reader.readAsArrayBuffer(file);\n    });\n  }\n  \n  function make_cols(refstr) {\n    var o = [],\n      C = XLSX.utils.decode_range(refstr).e.c + 1;\n    for (var i = 0; i < C; ++i) {\n      o[i] = { name: XLSX.utils.encode_col(i), key: i };\n    }  \n    return o;\n  }","import React from 'react';\nimport './Loader.css';\n\nfunction Loader(props) {\n  return (\n    <div className=\"loader\" style={props.sizeStyle}></div>\n  );\n}\n\nexport default Loader;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Chart from 'chart.js';\n\nimport './HistoricalData.css';\nimport Loader from '../Loader/Loader';\n\nclass HistoricalData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rsiValuesForStock: [],\n      intervalForRsi: '',\n      macdValuesForStock: [],\n      intervalForMacd: '',\n      displayRetryOption: false,\n      loadingStockDetails: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchRSIForStock(this.props.stock.code, 'daily');\n    this.fetchMACDForStock(this.props.stock.code, 'daily');\n  }\n\n  refreshCharts() {\n    this.fetchRSIForStock(this.props.stock.code, 'daily');\n    this.fetchMACDForStock(this.props.stock.code, 'daily');\n  }\n\n  fetchRSIForStock(stockCode, interval) {\n    let term = `${stockCode}.NSE`;\n    const keys = ['F3YMXXSSB1DWAEWU', 'DDLGBF7C6UW50LSR', 'WXFOM7UBEMRGNOD5', 'PSIUYE1BYNK35V7D', 'Q2QD7JRMPER3VOYO'];\n    const key = keys[Math.floor(Math.random() * keys.length)];\n    const url = `https://www.alphavantage.co/query?function=RSI&symbol=${term}&interval=${interval}&time_period=10&series_type=open&apikey=${key}`;\n\n    this.setState({\n      loadingStockDetails: true\n    });\n    axios.get(url)\n    .then(res => {\n      if (res.data['Technical Analysis: RSI']) {\n        const rsiObjectMap = Object.values(res.data['Technical Analysis: RSI']),\n          rsiValues = rsiObjectMap.map(rsi => parseFloat(rsi.RSI)),\n          ctx = document.getElementById(`rsiChart-${this.props.stock.code}`).getContext('2d');\n        new Chart(ctx, {\n          type: 'line',\n          data: {\n            labels: Object.keys(res.data['Technical Analysis: RSI']).slice(0, 10).reverse(),\n            datasets: [\n              {\n                label: 'RSI',\n                data: rsiValues.slice(0, 10).reverse(),\n                borderColor: \"#3e95cd\",\n                fill: false\n              }\n            ]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false\n          }\n        });\n        this.setState({\n          rsiValuesForStock: rsiValues,\n          displayRetryOption: false\n        });\n      } else {\n        this.setState({\n          displayRetryOption: true\n        });\n      }\n    })\n    .catch(error => {\n      this.setState({\n        displayRetryOption: true\n      });\n      console.log(error)\n    })\n    .finally(() => {\n      this.setState({\n        loadingStockDetails: false\n      })\n    })\n  }\n\n  fetchMACDForStock(stockCode, interval) {\n    let term = `${stockCode}.NSE`;\n    const keys = ['F3YMXXSSB1DWAEWU', 'DDLGBF7C6UW50LSR', 'WXFOM7UBEMRGNOD5', 'PSIUYE1BYNK35V7D', 'Q2QD7JRMPER3VOYO'];\n    const key = keys[Math.floor(Math.random() * keys.length)];\n    const url = `https://www.alphavantage.co/query?function=MACD&symbol=${term}&interval=${interval}&series_type=open&apikey=${key}`;\n\n    this.setState({\n      loadingStockDetails: true\n    });\n    axios.get(url)\n    .then(res => {\n      if (res.data['Technical Analysis: MACD']) {\n        const macdObjectMap = Object.values(res.data['Technical Analysis: MACD']),\n          macdValues = macdObjectMap.map(macd => parseFloat(macd.MACD)),\n          macdSignalValues = macdObjectMap.map(macd => parseFloat(macd.MACD_Signal)),\n          ctx = document.getElementById(`macdChart-${this.props.stock.code}`).getContext('2d');\n        new Chart(ctx, {\n          type: 'line',\n          data: {\n            labels: Object.keys(res.data['Technical Analysis: MACD']).slice(0, 10).reverse(),\n            datasets: [\n              {\n                label: 'MACD',\n                data: macdValues.slice(0, 10).reverse(),\n                borderColor: \"#3e95cd\",\n                fill: false\n              },\n              {\n                label: 'MACD Signal',\n                data: macdSignalValues.slice(0, 10).reverse(),\n                borderColor: \"#8e5ea2\",\n                fill: false\n              }\n            ]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false\n          }\n        });\n        this.setState({\n          macdValuesForStock: macdValues,\n          displayRetryOption: false\n        });\n      } else {\n        this.setState({\n          displayRetryOption: true\n        })\n      }\n    })\n    .catch(error => {\n      this.setState({\n        displayRetryOption: true\n      });\n      console.log(error);\n    })\n    .finally(() => {\n      this.setState({\n        loadingStockDetails: false\n      })\n    })\n  }\n\n  changeInterval(event) {\n    let interval = '';\n    switch (event.target.value) {\n      case 'daily':\n        interval = 'daily';\n        break;\n      case 'intraday_5':\n        interval = '5min';\n        break;\n      case 'intraday_15':\n      interval = '15min';\n        break;\n      default:\n        break;\n    }\n    this.fetchRSIForStock(this.props.stock.code, interval);\n    this.fetchMACDForStock(this.props.stock.code, interval);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"select-dropdown\">\n          <select id=\"interval\" onChange={this.changeInterval.bind(this)} defaultValue=\"daily\">\n            <option value=\"daily\">Daily</option>\n            <option value=\"intraday_5\">Intraday(5 min)</option>\n            <option value=\"intraday_15\">Intraday(15 min)</option>\n          </select>\n        </div>\n        { \n          this.state.loadingStockDetails ? <Loader sizeStyle={{height: '30px', width: '30px', marginLeft: '40%', marginTop: '20px'}}/> : null\n        }\n        {\n          this.state.displayRetryOption && !this.state.loadingStockDetails ? <div><div style={{color: 'red'}}>Couldn't retrieve latest data. Refresh the page again after 1 minute</div><div><button className=\"button\" onClick={this.refreshCharts.bind(this)}>Refresh</button></div></div> : null\n        }\n        <div className=\"charts\">\n          <div className={`rsi-chart-${this.props.stock.code}`} style={{height: '300px', width: '300px'}}>\n            <canvas id={`rsiChart-${this.props.stock.code}`}></canvas>\n          </div>\n          <div className={`macd-chart-${this.props.stock.code}`} style={{height: '300px', width: '300px'}}>\n            <canvas id={`macdChart-${this.props.stock.code}`}></canvas>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HistoricalData;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport './TechnicalIndicators.css';\nimport Loader from '../Loader/Loader';\nconst bullish = require('technicalindicators').bullish;\nconst bearishengulfingpattern = require('technicalindicators').bearishengulfingpattern;\nconst bullishengulfingpattern = require('technicalindicators').bullishengulfingpattern;\nconst doji =require('technicalindicators').doji;\nconst bullishharami =require('technicalindicators').bullishharami;\nconst bearishharami =require('technicalindicators').bearishharami;\nconst eveningstar =require('technicalindicators').eveningstar;\nconst morningstar =require('technicalindicators').morningstar;\nconst threewhitesoldiers =require('technicalindicators').threewhitesoldiers;\nconst threeblackcrows =require('technicalindicators').threeblackcrows;\nconst shootingstar = require('technicalindicators').shootingstar;\n\nclass TechnicalIndicators extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      technicalPatterns: {},\n      displayRetryOption: false,\n      loadingStockDetails: false\n    };\n    this.fetchTradingDataForStock = this.fetchTradingDataForStock.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchTradingDataForStock(this.props.stock.code, 'daily');\n  }\n\n  fetchTradingDataForStock(stockCode, interval) {\n    console.log('fetchTradingDataForStock', stockCode, interval);\n    let term = `${stockCode}.NSE`;\n    const keys = ['F41ON15LGCFM4PR7', 'SYTCQBUIU44BX2G4', '50M3AP1K3Y', 'RNZPXZ6Q9FEFMEHM', 'VZLZ58FTEXZW7QZ6'];\n    const key = keys[Math.floor(Math.random() * keys.length)];\n    let url;\n    switch (interval) {\n      case 'daily':\n        url = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&&symbol=${term}&outputsize=compact&apikey=${key}`;\n        break;\n      case 'intraday_5':\n        url = `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&&symbol=${term}&interval=5min&outputsize=compact&apikey=${key}`;\n        break;\n      case 'intraday_15':\n        url = `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&&symbol=${term}&interval=15min&outputsize=compact&apikey=${key}`;\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      loadingStockDetails: true\n    });\n    axios.get(url)\n    .then(res => {\n      const key = res.data['Meta Data'] ? Object.keys(res.data)[1].startsWith('Time Series') ? Object.keys(res.data)[1] : null : null;\n      if (key) {\n        const allValues = [...Object.values(res.data[key])],\n          openValues = allValues.map(val => parseFloat(val['1. open'])).slice(0, 2).reverse(),\n          highValues = allValues.map(val => parseFloat(val['2. high'])).slice(0, 2).reverse(),\n          lowValues = allValues.map(val => parseFloat(val['3. low'])).slice(0, 2).reverse(),\n          closeValues = allValues.map(val => parseFloat(val['4. close'])).slice(0, 2).reverse();\n          // volumes = allValues.map(val => parseFloat(val['5. volume'])).slice(0, 2).reverse();\n        const inputValues1 = {\n          open: openValues,\n          high: highValues,\n          low: lowValues,\n          close: closeValues\n        },\n          inputValuesWith3dayInput = {\n            open: allValues.map(val => parseFloat(val['1. open'])).slice(0, 3).reverse(),\n            high: allValues.map(val => parseFloat(val['2. high'])).slice(0, 3).reverse(),\n            low: allValues.map(val => parseFloat(val['3. low'])).slice(0, 3).reverse(),\n            close: allValues.map(val => parseFloat(val['4. close'])).slice(0, 3).reverse()\n          };\n                      \n        console.log('inputValues', inputValues1, inputValuesWith3dayInput, bearishengulfingpattern(inputValues1), bullishengulfingpattern(inputValues1));\n        this.setState({\n          technicalPatterns: {\n            \"Is Bearish engulfing pattern formed\": bearishengulfingpattern(inputValues1),\n            \"Is Bullish engulfing pattern formed\": bullishengulfingpattern(inputValues1),\n            \"Is Doji formed\": doji({\n              open: openValues[openValues.length - 1],\n              high: highValues[highValues.length - 1],\n              low: lowValues[lowValues.length - 1],\n              close: closeValues[closeValues.length - 1]\n            }),\n            \"Is Bearish harami pattern formed\": bearishharami(inputValues1),\n            \"Is Bullish harami pattern formed\": bullishharami(inputValues1),\n            \"Is Evening Star formed\": eveningstar(inputValuesWith3dayInput),\n            \"Is Morning Star formed\": morningstar(inputValuesWith3dayInput),\n            \"Is Three Black Crows pattern formed\": threeblackcrows(inputValuesWith3dayInput),\n            \"Is Three White Soldiers pattern formed\": threewhitesoldiers(inputValuesWith3dayInput),\n            \"Is Shooting Star pattern formed\": shootingstar(inputValuesWith3dayInput),\n            Overall: bullish(inputValues1)\n          },\n          displayRetryOption: false\n        });\n        console.log('this.state.technicalPatterns', this.state.technicalPatterns);\n      } else {\n        this.setState({\n          displayRetryOption: true\n        });\n      }\n    })\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        displayRetryOption: true\n      })\n    })\n    .finally(() => {\n      this.setState({\n        loadingStockDetails: false\n      })\n    })\n  }\n\n  changeInterval(event) {\n    this.fetchTradingDataForStock(this.props.stock.code, event.target.value);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"select-dropdown\">\n          <select id=\"interval\" onChange={this.changeInterval.bind(this)} defaultValue=\"daily\">\n            <option value=\"daily\">Daily</option>\n            <option value=\"intraday_5\">Intraday(5 min)</option>\n            <option value=\"intraday_15\">Intraday(15 min)</option>\n          </select>\n          <p></p>\n          <p>{this.state.value}</p>\n        </div>\n        {\n          this.state.displayRetryOption && !this.state.loadingStockDetails ? <div><div style={{color: 'red'}}>Couldn't retrieve latest data. Refresh the page again after 1 minute</div><div><button className=\"button\" onClick={() => this.fetchTradingDataForStock(this.props.stock.code, 'daily')}>Refresh</button></div></div> : null\n        }\n        { \n          this.state.loadingStockDetails ? <Loader sizeStyle={{height: '30px', width: '30px', marginLeft: '40%', marginTop: '20px'}}/> :\n          <div>\n            {\n              this.state.technicalPatterns && Object.keys(this.state.technicalPatterns).length ? Object.keys(this.state.technicalPatterns).map((key, index) => {\n                return (\n                  <div key={index}>{key} : {this.state.technicalPatterns[key] ? 'Yes': 'No'}</div>\n                );\n              }) : null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default TechnicalIndicators;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './StockListItem.css';\nimport Loader from '../Loader/Loader';\nimport HistoricalData from '../HistoricalData/HistoricalData';\nimport TechnicalIndicators from '../TechnicalIndicators/TechnicalIndicators';\n\nclass StockListItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stockDetails: {},\n      displayRetryOption: false,\n      loadingStockDetails: false\n    };\n    this.openTab = this.openTab.bind(this);\n    this.fetchStockDetails = this.fetchStockDetails.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchStockDetails(this.props.item.code);\n    document.getElementById(`defaultOpen-${this.props.item.code}`).click();\n  }\n\n  openTab(ev, dataType) {\n    var i, tabcontent, tablinks;\n    tabcontent = document.getElementsByClassName(`tabcontent-${this.props.item.code}`);\n    for (i = 0; i < tabcontent.length; i++) {\n      tabcontent[i].style.display = \"none\";\n    }\n    tablinks = document.getElementsByClassName(`tablinks-${this.props.item.code}`);\n    for (i = 0; i < tablinks.length; i++) {\n      tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n    }\n    document.getElementById(dataType).style.display = \"block\";\n    ev.currentTarget.className += \" active\";\n  }\n\n  fetchStockDetails(stockCode) {\n    let term = `${stockCode}.NSE`;\n    const keys = ['E3JQ79Z8TOZDXQ9O', '1MZEAXT6B2B52KXY', 'M8MTQHK38J65US1E', 'CDYFPHQYOGVYKYFL', 'TM6O1OH9WQIT6LIV'];\n    const key = keys[Math.floor(Math.random() * keys.length)];\n    const url = `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${term}&apikey=${key}`;\n\n    this.setState({\n      loadingStockDetails: true\n    });\n    axios.get(url)\n    .then(res => {\n      if (res.data['Global Quote']) {\n        this.setState({\n          stockDetails: res.data['Global Quote'],\n          displayRetryOption: false\n        });\n      } else {\n        this.setState({\n          displayRetryOption: true\n        });\n      }\n    })\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        displayRetryOption: true\n      });\n    })\n    .finally(() => {\n      this.setState({\n        loadingStockDetails: false\n      })\n    })\n  }\n\n  render() {\n    const stockDetails = this.state.stockDetails;\n    return (\n      <div className=\"stock-details\">\n        <div>\n          <div className=\"title\">{ this.props.item.name }</div>\n          <div className=\"tab\">\n            <button className={`tablinks-${this.props.item.code}`} onClick={ (ev) => this.openTab( ev, `latest-${this.props.item.code}`) } id={`defaultOpen-${this.props.item.code}`}>Latest Data</button>\n            <button className={`tablinks-${this.props.item.code}`} onClick={ (ev) => this.openTab(ev, `historical-${this.props.item.code}`) }>Historical</button>\n            <button className={`tablinks-${this.props.item.code}`} onClick={ (ev) => this.openTab(ev, `technical-${this.props.item.code}`) }>Technical Indicators</button>\n          </div>\n          {\n            this.state.displayRetryOption && !this.state.loadingStockDetails ? <div><div style={{color: 'red'}}>Couldn't retrieve latest data. Refresh the page again after 1 minute</div><div><button className=\"button\" onClick={() => this.fetchStockDetails(this.props.item.code)}>Refresh</button></div></div> : null\n          }\n          { \n            this.state.loadingStockDetails ? <Loader sizeStyle={{height: '30px', width: '30px', marginLeft: '40%'}}/> :\n            <div id={`latest-${this.props.item.code}`} className={`tabcontent-${this.props.item.code} details`}>\n              { stockDetails && Object.keys(stockDetails).length ? Object.keys(stockDetails).map((key, index) => {\n                return (\n                  <div key={index}>{key} : {stockDetails[key]}</div>\n                );\n              }) : null\n              }\n            </div> \n          }\n          <div id={`historical-${this.props.item.code}`} className={`tabcontent-${this.props.item.code} details`}>\n            <HistoricalData stock={this.props.item}/>\n          </div>\n          <div id={`technical-${this.props.item.code}`} className={`tabcontent-${this.props.item.code} details`}>\n            <TechnicalIndicators stock={this.props.item}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StockListItem;","import React from 'react';\nimport StockListItem from '../StockListItem/StockListItem';\nimport './StockList.css';\n\n\nconst StockList = (props) => {\n\n  const stockItems = props.stockItems.map((stock, index) => {\n    return (\n      <StockListItem key={ index } item={stock}/>\n    );\n  });\n\n  return (\n    <div className=\"StockList\">\n      { stockItems }\n    </div>\n  )\n}\n\nexport default StockList;\n","import React from 'react';\n\nimport './FilterStocks.css';\n\nfunction FilterStocks(props) {\n\n  return  (\n    <div className=\"filter_stocks\">\n      <div className=\"label\" style={{paddingLeft:\"10px\"}}>Filter the stocks based on these parameters: </div>\n      <div className=\"filters\">\n        { props.filterParams.map((item, index) => {\n          return (\n          <div className=\"FilterParams\" key={index}>{item}: <input type=\"number\" onChange={(ev) => props.filterValues(ev.target.value, 'min', item)}/> - <input type=\"number\" onChange={(ev) => props.filterValues(ev.target.value, 'max', item)}/></div>\n        )})}\n      </div>\n    </div>\n  );\n}\n\nexport default FilterStocks;\n","import React from 'react';\nimport FilterStocks from '../FilterStocks/FilterStocks';\nimport './ImportFile.css';\n\nfunction ImportFile(props) {\n  const filterParams = ['Market Capitalization', 'Return on equity', 'Price to Earning', 'Pledged percentage', 'PEG Ratio', \n  'Price to book value', 'Debt to equity'];\n    return  (\n      <div className=\"ImportFile\">\n        <div className=\"header optional\">OR</div>\n        <div className=\"header\">You could even import .xlsx file to add the stocks in the search bar!(up to 5 stocks can be filtered at a time)</div>\n        <input type=\"file\" onChange={props.onChange} onClick={props.onClick} style={{\"padding\":\"10px\"}} />\n        { props.totalEntriesInfile.length ? <div className=\"total_entries\">{props.totalEntriesInfile.length - 1} entries found in the file</div> : '' }\n        {props.totalEntriesInfile.length ?<FilterStocks filterParams={filterParams} filterValues={props.filterValues}/> : ''}\n      </div>\n    );\n}\n\nexport default ImportFile;\n","import React, { Component } from 'react';\nimport './InputTag.css';\nimport Loader from '../Loader/Loader';\n\nclass InputTag extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      tags: []\n    };\n  }\n  \n  componentDidMount() {\n    this.setState({\n      tags: this.props.entries\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.entries.length !== this.props.entries.length ) {\n      this.setState({\n        tags: [...new Set([...this.state.tags, ...this.props.entries])]\n      })\n    }\n  }\n\n  removeTag = (tag, i) => {\n    const newTags = [ ...this.state.tags ];\n    newTags.splice(i, 1);\n    this.setState({ tags: newTags });\n    this.props.onRemove(tag);\n  }\n\n  inputKeyDown = (item, e) => { \n    item.code = item.code.split('.')[0].toString();\n    this.props.onSelect(item, e);\n    if (this.state.tags.find(tag => tag.code.toLowerCase() === item.code.toLowerCase())) {\n      return;\n    }\n    this.setState({ tags: [...this.state.tags, item]});\n    this.tagInput.value = null;\n  }\n\n  render() {\n    const { tags } = this.state;\n\n    const predictions = this.props.predictions;\n    return (\n      <div>\n        <div className=\"input-tag\">\n          <ul className=\"input-tag__tags\">\n            { tags.map((tag, i) => (\n              <li key={i}>\n                {tag.code}\n                <button type=\"button\" onClick={() => { this.removeTag(tag, i); }}>+</button>\n              </li>\n            ))}\n            <li className=\"input-tag__tags__input\">\n              <input type=\"text\"\n                onChange={ this.props.onChange }\n                placeholder=\"Enter proper NSE code for your stock\"\n                ref={c => { this.tagInput = c; }} />\n            </li>\n          </ul>\n        </div>\n        <div className=\"SearchBar__Predictions\"> \n          <div>{ this.props.value.length > 1 && predictions && predictions.length ? predictions.map((item, index) => (\n            <div key={index} className=\"prediction\" onClick={ (e) => this.inputKeyDown(item, e) }>{item.code} : { item.name}</div>\n          )) : <div>{ this.props.value.length > 1 && !this.props.isDataFetched && predictions && !predictions.length ? <div className=\"prediction\"><Loader sizeStyle={{height: '12px', width: '12px', marginLeft: '40%'}}/></div>:null}</div>}</div>\n          <div className=\"error\">{ this.props.value.length > 1 && this.props.isDataFetched && predictions && !predictions.length ? 'No stock found with such keywords' : null }</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InputTag;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport {ExcelRenderer} from './components/ReactExcelRenderer/ReactExcelRenderer';\nimport StockList from './components/StockList/StockList';\nimport ImportFile from './components/ImportFile/ImportFile';\nimport InputTag from './components/InputTag/InputTag';\nimport './App.css';\n\nconst INPUT_TIMEOUT = 600;\nconst filters = {};\nlet stocks = [];\n\n// const SMA = require('technicalindicators').SMA;\n// console.log(SMA.calculate({period : 5, values : [1,2,3,4,5,6,7,8,9]}));\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      predictions: [],\n      stocks: [],\n      value: '',\n      dataFetched: false,\n      totalEntriesInfile: [],\n      filters:{},\n      selectedStocks: []\n    };\n\n    // this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.onSelectStock = this.onSelectStock.bind(this);\n  }\n\n  handleChange(e) {\n    // clear timeout when input changes value\n    clearTimeout(this.timeout);\n    const value = e.target.value;\n    this.setState({\n      value\n    });\n\n    if (value.length > 1) {\n      // make delayed api call\n      this.timeout = setTimeout(() => {\n        this.fetchAllPredictions(value);\n      }, INPUT_TIMEOUT);\n    } else {\n      this.setState({\n        predictions: []\n      });\n    }\n  }\n\n  fetchAllPredictions(text) {\n    let term = `${text}.NSE`;\n    const keys = ['5VDBWLCQX19QLOHA', 'BYCL2VV943GO0OYJ', '2H21XW7C06ZD97VM', 'U9QP95JKNBLAGPS1', 'ULJDF26QPKN97Z44'];\n    const key = keys[Math.floor(Math.random() * keys.length)];\n    const url = `https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${term}&apikey=${key}`;\n\n    this.setState({\n      dataFetched: false\n    })\n    axios.get(url)\n    .then(res => {\n      let stocks = _.flattenDeep( Array.from(res.data['bestMatches']).map((stock) => [{code: stock['1. symbol'], name: stock['2. name']}]) );\n      this.setState({\n        predictions: stocks\n      });\n    })\n    .catch(error => console.log(error))\n    .finally(() => this.setState({\n      dataFetched: true\n    }))\n  }\n\n  onSelectStock(item, ev) {\n    item.code = item.code.split('.')[0].toString();\n    this.setState({\n      value: '',\n      predictions: [],\n      selectedStocks: [ ...this.state.selectedStocks, item ]\n    });\n    ev.preventDefault();\n  }\n\n  onRemoveStock(item, ev) {\n    const stockCode = item.code.split('.')[0].toString(),\n      updatedSelectedStocks = this.state.selectedStocks.filter(stock => stock.code !== stockCode);\n    this.setState({\n      selectedStocks: updatedSelectedStocks\n    });\n  }\n\n  filterValues(value, type, param) {\n    if (!filters[param]) {\n      filters[param] = {};\n      filters[param][type] = value;\n    } else {\n      filters[param][type] = value;\n    }\n    if (!filters[param].min && !filters[param].max) {\n      delete filters[param];\n    }\n\n    const columns = this.state.totalEntriesInfile[0],\n      codeIndex = columns.indexOf('NSE Code'),\n      nameIndex = columns.indexOf('Name');\n    stocks = [...this.state.totalEntriesInfile.slice(0, this.state.totalEntriesInfile.length)];\n    let newfilteredStocks = stocks.filter(item => Object.keys(filters).every(param => \n      filters[param].min && filters[param].max && (item[columns.indexOf(param)] >= Number(filters[param].min) && item[columns.indexOf(param)] <= Number(filters[param].max))\n    ));\n    newfilteredStocks = newfilteredStocks.slice(0, 5);\n    const filteredStockNames = [ ...newfilteredStocks.map(stockData =>\n      ({\n        code: stockData[codeIndex],\n        name: stockData[nameIndex]\n      }))];\n    this.setState({\n      selectedStocks: filteredStockNames\n    })\n  }\n\n  fileHandler(event) {    \n    if(event.target.files.length){\n      let fileObj = event.target.files[0];\n      let fileName = fileObj.name;\n\n      \n      //check for file extension and pass only if it is .xlsx and display error message otherwise\n      if(fileName.slice(fileName.lastIndexOf('.')+1) === \"xlsx\"){\n        // this.setState({\n        //   uploadedFileName: fileName,\n        //   isFormInvalid: false\n        // });\n        this.renderFile(fileObj)\n      }    \n      else{\n        // this.setState({\n        //   isFormInvalid: true,\n        //   uploadedFileName: \"\"\n        // })\n      }\n    }               \n  }\n\n  renderFile(fileObj) {\n    //just pass the fileObj as parameter\n    ExcelRenderer(fileObj, (err, resp) => {\n      if(err){\n        console.log(err);            \n      }\n      else {\n        this.setState({\n          totalEntriesInfile: resp.rows\n        });\n      }\n    }); \n}\n\n  render () {\n    // let stocks = this.state.stocks;\n    const value = this.state.value;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__Title\">Stock Search</h1>\n        <InputTag entries={this.state.selectedStocks}\n          value={ value }\n          onChange={ this.handleChange }\n          onClick={ this.handleClick }\n          isDataFetched={this.state.dataFetched}\n          predictions={ this.state.predictions }\n          onSelect={ this.onSelectStock }\n          onRemove={ this.onRemoveStock.bind(this) }/>\n        <ImportFile onChange={this.fileHandler.bind(this)} onClick={(event)=> { event.target.value = null }}\n          totalEntriesInfile={this.state.totalEntriesInfile} filterValues={this.filterValues.bind(this)}/> \n        <StockList stockItems={ this.state.selectedStocks }/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}