{"version":3,"sources":["components/ReactExcelRenderer/ReactExcelRenderer.js","components/Loader/Loader.js","components/StockListItem/StockListItem.js","components/StockList/StockList.js","components/FilterStocks/FilterStocks.js","components/ImportFile/ImportFile.js","components/InputTag/InputTag.js","App.js","serviceWorker.js","index.js"],"names":["Component","ExcelRenderer","file","callback","Promise","resolve","reject","reader","FileReader","rABS","readAsBinaryString","onload","e","bstr","target","result","wb","XLSX","read","type","wsname","SheetNames","ws","Sheets","data","rows","utils","sheet_to_json","header","cols","refstr","o","C","decode_range","c","i","name","encode_col","key","make_cols","readAsArrayBuffer","Loader","props","className","style","sizeStyle","StockListItem","state","stockDetails","loadingStockDetails","openTab","bind","this","fetchStockDetails","item","code","document","getElementById","click","ev","dataType","tabcontent","tablinks","getElementsByClassName","length","display","replace","currentTarget","stockCode","term","keys","Math","floor","random","url","setState","axios","get","then","res","catch","error","console","log","finally","onClick","id","height","width","marginLeft","Object","map","index","StockList","stockItems","stock","FilterStocks","paddingLeft","filterParams","onChange","filterValues","value","ImportFile","totalEntriesInfile","InputTag","removeTag","tag","newTags","tags","splice","onRemove","inputKeyDown","split","toString","onSelect","find","toLowerCase","tagInput","entries","prevProps","prevState","snapshot","Set","predictions","placeholder","ref","isDataFetched","filters","App","stocks","dataFetched","selectedStocks","handleChange","onSelectStock","clearTimeout","timeout","setTimeout","fetchAllPredictions","text","_","flattenDeep","Array","from","preventDefault","updatedSelectedStocks","filter","param","min","max","columns","codeIndex","indexOf","nameIndex","newfilteredStocks","slice","every","Number","filteredStockNames","stockData","event","files","fileObj","fileName","lastIndexOf","renderFile","err","resp","handleClick","onRemoveStock","fileHandler","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8733d79b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport XLSX from 'xlsx';\n\nexport class OutTable extends Component {\n\n\tconstructor(props) { \n        super(props);\n        this.state = {\n            \n        }\n    }\n\n\trender() { \n        return (\n            <div>\n                <table className={this.props.tableClassName}  >                                       \n                    <tbody>\n                        <tr>\n                            {\n                                this.props.columns.map((c) => \n                                    <th key={c.key} className={c.key === -1 ? this.props.tableHeaderRowClass : \"\"}>{c.key === -1 ? \"\" : c.name}</th>\n                                )\n                            \n                            }\n                        </tr>\n                        {this.props.data.map((r,i) => <tr key={i}><td key={i} className={this.props.tableHeaderRowClass}>{i}</td>\n                            {this.props.columns.map(c => <td key={c.key}>{ r[c.key] }</td>)}\n                        </tr>)}\n                    </tbody>\n                </table>\n            </div>\n        ); \n    }\n}\n\nexport function ExcelRenderer(file, callback) {\n    return new Promise(function(resolve, reject) {\n      var reader = new FileReader();\n      var rABS = !!reader.readAsBinaryString;\n      reader.onload = function(e) {\n        /* Parse data */\n        var bstr = e.target.result;\n        var wb = XLSX.read(bstr, { type: rABS ? \"binary\" : \"array\" });\n  \n        /* Get first worksheet */\n        var wsname = wb.SheetNames[0];\n        var ws = wb.Sheets[wsname];\n  \n        /* Convert array of arrays */\n        var json = XLSX.utils.sheet_to_json(ws, { header: 1 });\n        var cols = make_cols(ws[\"!ref\"]);\n  \n        var data = { rows: json, cols: cols };\n  \n        resolve(data);\n        return callback(null, data);\n      };\n      if (file && rABS) reader.readAsBinaryString(file);\n      else reader.readAsArrayBuffer(file);\n    });\n  }\n  \n  function make_cols(refstr) {\n    var o = [],\n      C = XLSX.utils.decode_range(refstr).e.c + 1;\n    for (var i = 0; i < C; ++i) {\n      o[i] = { name: XLSX.utils.encode_col(i), key: i };\n    }  \n    return o;\n  }","import React from 'react';\nimport './Loader.css';\n\nfunction Loader(props) {\n  return (\n    <div className=\"loader\" style={props.sizeStyle}></div>\n  );\n}\n\nexport default Loader;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './StockListItem.css';\nimport Loader from '../Loader/Loader';\n\nclass StockListItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stockDetails: {},\n      loadingStockDetails: false\n    };\n    this.openTab = this.openTab.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchStockDetails(this.props.item.code);\n    document.getElementById(`defaultOpen-${this.props.item.code}`).click();\n  }\n\n  openTab(ev, dataType) {\n    var i, tabcontent, tablinks;\n    tabcontent = document.getElementsByClassName(`tabcontent-${this.props.item.code}`);\n    for (i = 0; i < tabcontent.length; i++) {\n      tabcontent[i].style.display = \"none\";\n    }\n    tablinks = document.getElementsByClassName(`tablinks-${this.props.item.code}`);\n    for (i = 0; i < tablinks.length; i++) {\n      tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n    }\n    document.getElementById(dataType).style.display = \"block\";\n    ev.currentTarget.className += \" active\";\n  }\n\n  fetchStockDetails(stockCode) {\n    let term = `${stockCode}.NSE`;\n    const keys = ['F41ON15LGCFM4PR7', 'SYTCQBUIU44BX2G4', '50M3AP1K3Y', 'RNZPXZ6Q9FEFMEHM', 'VZLZ58FTEXZW7QZ6'];\n    const key = keys[Math.floor(Math.random() * keys.length)];\n    const url = `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${term}&apikey=${key}`;\n\n    this.setState({\n      loadingStockDetails: true\n    });\n    axios.get(url)\n    .then(res => {\n      this.setState({\n        stockDetails: res.data['Global Quote']\n      });\n    })\n    .catch(error => console.log(error))\n    .finally(() => {\n      this.setState({\n        loadingStockDetails: false\n      })\n    })\n  }\n\n  render() {\n    const stockDetails = this.state.stockDetails;\n    return (\n      <div className=\"stock-details\">\n        <div>\n          <div className=\"title\">{ this.props.item.name }</div>\n          <div className=\"tab\">\n            <button className={`tablinks-${this.props.item.code}`} onClick={ (ev) => this.openTab( ev, 'latest') } id={`defaultOpen-${this.props.item.code}`}>Latest Data</button>\n            <button className={`tablinks-${this.props.item.code}`} onClick={ (ev) => this.openTab(ev, 'historical') }>Historical</button>\n            <button className={`tablinks-${this.props.item.code}`} onClick={ (ev) => this.openTab(ev, 'technical') }>Technical Indicators</button>\n          </div>\n\n          <div id=\"historical\" className=\"tabcontent\">\n            <h3>Paris</h3>\n            <p>Paris is the capital of France.</p> \n          </div>\n\n          <div id=\"technical\" className=\"tabcontent\">\n            <h3>Tokyo</h3>\n            <p>Tokyo is the capital of Japan.</p>\n          </div>\n          { \n            this.state.loadingStockDetails ? <Loader sizeStyle={{height: '30px', width: '30px', marginLeft: '40%'}}/> :\n            <div id=\"latest\" className={`tabcontent-${this.props.item.code} details`}>\n              { stockDetails && Object.keys(stockDetails).length ? Object.keys(stockDetails).map((key, index) => {\n                return (\n                  <div key={index}>{key} : {stockDetails[key]}</div>\n                );\n              }) : null\n              }\n            </div> \n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StockListItem;","import React from 'react';\nimport StockListItem from '../StockListItem/StockListItem';\nimport './StockList.css';\n\n\nconst StockList = (props) => {\n\n  console.log('props.stockItems', props.stockItems);\n  const stockItems = props.stockItems.map((stock, index) => {\n    return (\n      <StockListItem key={ index } item={stock}/>\n    );\n  });\n\n  return (\n    <div className=\"StockList\">\n      { stockItems }\n    </div>\n  )\n}\n\nexport default StockList;\n","import React from 'react';\n\nimport './FilterStocks.css';\n\nfunction FilterStocks(props) {\n\n  return  (\n    <div className=\"filter_stocks\">\n      <div className=\"label\" style={{paddingLeft:\"10px\"}}>Filter the stocks based on these parameters: </div>\n      <div className=\"filters\">\n        { props.filterParams.map((item, index) => {\n          return (\n          <div className=\"FilterParams\" key={index}>{item}: <input type=\"number\" onChange={(ev) => props.filterValues(ev.target.value, 'min', item)}/> - <input type=\"number\" onChange={(ev) => props.filterValues(ev.target.value, 'max', item)}/></div>\n        )})}\n      </div>\n    </div>\n  );\n}\n\nexport default FilterStocks;\n","import React from 'react';\nimport FilterStocks from '../FilterStocks/FilterStocks';\nimport './ImportFile.css';\n\nfunction ImportFile(props) {\n  const filterParams = ['Market Capitalization', 'Return on equity', 'Price to Earning', 'Pledged percentage', 'PEG Ratio', \n  'Price to book value', 'Debt to equity'];\n    return  (\n      <div className=\"ImportFile\">\n        <div className=\"header\">You could even import .xlsx file to add the stocks in the search bar!(up to 5 stocks can be filtered at a time)</div>\n        <input type=\"file\" onChange={props.onChange} onClick={props.onClick} style={{\"padding\":\"10px\"}} />\n        { props.totalEntriesInfile.length ? <div className=\"total_entries\">{props.totalEntriesInfile.length - 1} entries found in the file</div> : '' }\n        {props.totalEntriesInfile.length ?<FilterStocks filterParams={filterParams} filterValues={props.filterValues}/> : ''}\n      </div>\n    );\n}\n\nexport default ImportFile;\n","import React, { Component } from 'react';\nimport './InputTag.css';\nimport Loader from '../Loader/Loader';\n\nclass InputTag extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      tags: []\n    };\n  }\n  \n  componentDidMount() {\n    this.setState({\n      tags: this.props.entries\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.entries.length !== this.props.entries.length ) {\n      this.setState({\n        tags: [...new Set([...this.state.tags, ...this.props.entries])]\n      })\n    }\n  }\n\n  removeTag = (tag, i) => {\n    const newTags = [ ...this.state.tags ];\n    newTags.splice(i, 1);\n    this.setState({ tags: newTags });\n    this.props.onRemove(tag);\n  }\n\n  inputKeyDown = (item, e) => { \n    item.code = item.code.split('.')[0].toString();\n    this.props.onSelect(item, e);\n    if (this.state.tags.find(tag => tag.code.toLowerCase() === item.code.toLowerCase())) {\n      return;\n    }\n    this.setState({ tags: [...this.state.tags, item]});\n    this.tagInput.value = null;\n  }\n\n  render() {\n    const { tags } = this.state;\n\n    const predictions = this.props.predictions;\n    return (\n      <div>\n        <div className=\"input-tag\">\n          <ul className=\"input-tag__tags\">\n            { tags.map((tag, i) => (\n              <li key={i}>\n                {tag.code}\n                <button type=\"button\" onClick={() => { this.removeTag(tag, i); }}>+</button>\n              </li>\n            ))}\n            <li className=\"input-tag__tags__input\">\n              <input type=\"text\"\n                onChange={ this.props.onChange }\n                placeholder=\"Enter proper NSE code for your stock\"\n                ref={c => { this.tagInput = c; }} />\n            </li>\n          </ul>\n        </div>\n        <div className=\"SearchBar__Predictions\"> \n          <div>{ this.props.value.length > 1 && predictions && predictions.length ? predictions.map((item, index) => (\n            <div key={index} className=\"prediction\" onClick={ (e) => this.inputKeyDown(item, e) }>{item.code} : { item.name}</div>\n          )) : <div>{ this.props.value.length > 1 && !this.props.isDataFetched && predictions && !predictions.length ? <div className=\"prediction\"><Loader sizeStyle={{height: '12px', width: '12px', marginLeft: '40%'}}/></div>:null}</div>}</div>\n          <div className=\"error\">{ this.props.value.length > 1 && this.props.isDataFetched && predictions && !predictions.length ? 'No stock found with such keywords' : null }</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InputTag;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport {ExcelRenderer} from './components/ReactExcelRenderer/ReactExcelRenderer';\nimport StockList from './components/StockList/StockList';\nimport ImportFile from './components/ImportFile/ImportFile';\nimport InputTag from './components/InputTag/InputTag';\nimport './App.css';\n\nconst INPUT_TIMEOUT = 600;\nconst filters = {};\nlet stocks = [];\n\n// const SMA = require('technicalindicators').SMA;\n// console.log(SMA.calculate({period : 5, values : [1,2,3,4,5,6,7,8,9]}));\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      predictions: [],\n      stocks: [],\n      value: '',\n      dataFetched: false,\n      totalEntriesInfile: [],\n      filters:{},\n      selectedStocks: []\n    };\n\n    // this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.onSelectStock = this.onSelectStock.bind(this);\n  }\n\n  handleChange(e) {\n    // clear timeout when input changes value\n    clearTimeout(this.timeout);\n    const value = e.target.value;\n    this.setState({\n      value\n    });\n\n    if (value.length > 1) {\n      // make delayed api call\n      this.timeout = setTimeout(() => {\n        this.fetchAllPredictions(value);\n      }, INPUT_TIMEOUT);\n    } else {\n      this.setState({\n        predictions: []\n      });\n    }\n  }\n\n  fetchAllPredictions(text) {\n    let term = `${text}.NSE`;\n    const keys = ['F41ON15LGCFM4PR7', 'SYTCQBUIU44BX2G4', '50M3AP1K3Y', 'RNZPXZ6Q9FEFMEHM', 'VZLZ58FTEXZW7QZ6'];\n    const key = keys[Math.floor(Math.random() * keys.length)];\n    const url = `https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${term}&apikey=${key}`;\n\n    this.setState({\n      dataFetched: false\n    })\n    axios.get(url)\n    .then(res => {\n      let stocks = _.flattenDeep( Array.from(res.data['bestMatches']).map((stock) => [{code: stock['1. symbol'], name: stock['2. name']}]) );\n      this.setState({\n        predictions: stocks\n      });\n    })\n    .catch(error => console.log(error))\n    .finally(() => this.setState({\n      dataFetched: true\n    }))\n  }\n\n  onSelectStock(item, ev) {\n    item.code = item.code.split('.')[0].toString();\n    this.setState({\n      value: '',\n      predictions: [],\n      selectedStocks: [ ...this.state.selectedStocks, item ]\n    });\n    ev.preventDefault();\n  }\n\n  onRemoveStock(item, ev) {\n    const stockCode = item.code.split('.')[0].toString(),\n      updatedSelectedStocks = this.state.selectedStocks.filter(stock => stock.code !== stockCode);\n    this.setState({\n      selectedStocks: updatedSelectedStocks\n    });\n  }\n\n  filterValues(value, type, param) {\n    if (!filters[param]) {\n      filters[param] = {};\n      filters[param][type] = value;\n    } else {\n      filters[param][type] = value;\n    }\n    if (!filters[param].min && !filters[param].max) {\n      delete filters[param];\n    }\n\n    const columns = this.state.totalEntriesInfile[0],\n      codeIndex = columns.indexOf('NSE Code'),\n      nameIndex = columns.indexOf('Name');\n    stocks = [...this.state.totalEntriesInfile.slice(0, this.state.totalEntriesInfile.length)];\n    let newfilteredStocks = stocks.filter(item => Object.keys(filters).every(param => \n      filters[param].min && filters[param].max && (item[columns.indexOf(param)] >= Number(filters[param].min) && item[columns.indexOf(param)] <= Number(filters[param].max))\n    ));\n    newfilteredStocks = newfilteredStocks.slice(0, 5);\n    const filteredStockNames = [ ...newfilteredStocks.map(stockData =>\n      ({\n        code: stockData[codeIndex],\n        name: stockData[nameIndex]\n      }))];\n    this.setState({\n      selectedStocks: filteredStockNames\n    })\n  }\n\n  fileHandler(event) {    \n    if(event.target.files.length){\n      let fileObj = event.target.files[0];\n      let fileName = fileObj.name;\n\n      \n      //check for file extension and pass only if it is .xlsx and display error message otherwise\n      if(fileName.slice(fileName.lastIndexOf('.')+1) === \"xlsx\"){\n        // this.setState({\n        //   uploadedFileName: fileName,\n        //   isFormInvalid: false\n        // });\n        this.renderFile(fileObj)\n      }    \n      else{\n        // this.setState({\n        //   isFormInvalid: true,\n        //   uploadedFileName: \"\"\n        // })\n      }\n    }               \n  }\n\n  renderFile(fileObj) {\n    //just pass the fileObj as parameter\n    ExcelRenderer(fileObj, (err, resp) => {\n      if(err){\n        console.log(err);            \n      }\n      else {\n        this.setState({\n          totalEntriesInfile: resp.rows\n        });\n      }\n    }); \n}\n\n  render () {\n    // let stocks = this.state.stocks;\n    const value = this.state.value;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__Title\">Stock Search</h1>\n        <InputTag entries={this.state.selectedStocks}\n          value={ value }\n          onChange={ this.handleChange }\n          onClick={ this.handleClick }\n          isDataFetched={this.state.dataFetched}\n          predictions={ this.state.predictions }\n          onSelect={ this.onSelectStock }\n          onRemove={ this.onRemoveStock.bind(this) }/>\n        <ImportFile onChange={this.fileHandler.bind(this)} onClick={(event)=> { event.target.value = null }}\n          totalEntriesInfile={this.state.totalEntriesInfile} filterValues={this.filterValues.bind(this)}/> \n        <StockList stockItems={ this.state.selectedStocks }/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}